syntax = "proto3";
package helium.mapper;

import "mapper_gps.proto";

message mapper_attach {
  oneof version { mapper_attach_v1 attach_v1 = 1; }
}

message mapper_attach_v1 {
  enum mapper_attach_result {
    NONE = 0;
    CONNECT = 1;
    LIMSERV = 2;
    NOCONN = 3;
    SEARCH = 4;
    NO_NETWORK_SERVICE = 5;
  }
  message mapper_attach_candidate {
    enum cell_tech {
      lte = 0;
      nr = 1;
    }
    cell_tech type = 1;
    // Corresponds "scan_response_counter" in the scan_response_counter which we
    // selected attach candidates from
    uint32 from_scan_response = 2;
    // delay in seconds between locking to the cell and evaluating connectivity
    uint32 delay = 3;
    uint32 plmn = 4;
    uint32 fcn = 5;
    // 28-bit (UMTS, LTE) or 36-bit (5G NR)
    uint64 cid = 6;
    // RSRQ in units of 0.1 dB
    int32 rsrp = 7;
    // RSRP in units of 0.1 dBm
    int32 rsrq = 8;
  }
  // This allows us to detect censorship efforts. It can roll over.
  uint32 attach_counter = 1;
  mapper_gps_v1 gps = 2;
  mapper_attach_candidate candidate = 3;
  mapper_attach_result result = 4;
}
