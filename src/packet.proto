syntax = "proto3";

package helium;

import "data_rate.proto";
import "gps.proto";

message eui {
  uint64 deveui = 1;
  uint64 appeui = 2;
}

message routing_information {
  oneof data {
    uint32 devaddr = 1;
    eui eui = 2;
  }
}

message window {
  uint64 timestamp = 1;
  float frequency = 2;
  string datarate = 3;
}

message packet {
  uint32 oui = 1;
  enum packet_type {
    longfi = 0;
    lorawan = 1;
  }
  packet_type type = 2;
  bytes payload = 3;
  uint64 timestamp = 4;
  float signal_strength = 5;
  float frequency = 6;
  string datarate = 7;
  float snr = 8;
  routing_information routing = 9;
  window rx2_window = 10;
}

message secure_packet_v1 {
  // frequency in Hz
  uint64 freq = 1;

  data_rate datarate = 2;

  // Signal to Noise radio (0.01dB)
  int32 snr = 3;

  // Received Signal Strength Indicator (1 dBm)
  sint32 rssi = 4;

  // Internal timestamp of "RX finished" event
  uint32 tmst = 5;

  // Globally Unique identifier of Concentrator Card
  bytes card_id = 6;

  // time of beacon was received by concentrator (nanoseconds since GPS Epoch) (can be used for TDOA)
  gps_time gps_time = 7;

  wgs84_position pos = 8;

  // packet payload
  bytes data = 9;

  // signature of the RX pkt signed by Secure Concentrator Card
  bytes sc_signature = 10;
}
