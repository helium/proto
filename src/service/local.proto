syntax = "proto3";

package helium.local;

import "gateway_staking_mode.proto";

message pubkey_res {
  bytes address = 1;
  bytes onboarding_address = 2;
}
message pubkey_req {}

message sign_req { bytes data = 1; }
message sign_res { bytes signature = 1; }

message keyed_uri {
  bytes address = 1;
  string uri = 2;
}

message region_req {}
message region_res { int32 region = 1; }

message add_gateway_req {
  bytes owner = 1;
  bytes payer = 2;
  gateway_staking_mode staking_mode = 3;
}

message add_gateway_res { bytes add_gateway_txn = 1; }

service api {
  rpc pubkey(pubkey_req) returns (pubkey_res);
  rpc sign(sign_req) returns (sign_res);
  rpc region(region_req) returns (region_res);
  rpc add_gateway(add_gateway_req) returns (add_gateway_res);
}
