syntax = "proto3";

package helium.verifier;

message file_info {
  string key = 1;
  file_type file_type = 2;
  uint64 timestamp = 3;
  uint64 size = 4;
}

message processed_files {
  repeated file_info files = 1; 
}

message share {
  bytes pub_key = 1;
  bytes weight = 2;
  uint64 timestamp = 3;
  cell_type cell_type = 4;
}

message shares {
  map<string, share> shares = 1;
}

message speed_share {
  bytes pub_key = 1;
  uint64 upload_speed = 2;
  uint64 download_speed = 3;
  uint32 latency = 4;
  uint64 timestamp = 5;
}

message speed_share_list {
  repeated speed_share speed_shares = 1;
}

message speed_shares {
  map<string, speed_share_list> speed_shares = 1;
}

message moving_avg {
  uint64 window_size = 1;
  average average = 2;
  bool is_valid = 3; 
  repeated speed_share speed_shares = 4;
}

message average {
  uint64 upload_speed_avg = 1;
  uint64 download_speed_avg =  2;
  uint32 latency_avg = 3;
}

message speed_share_moving_avgs {
  map<string, moving_avg> moving_avgs = 1;
}

message cell_shares {
  map<string, bytes> shares = 1;
}

message hotspot_shares {
  map<string, bytes> shares = 1;
}

message owner_shares {
  map<string, bytes> shares = 1;
}

message missing_owner_shares {
  map<string, bytes> shares = 1;
}

message owner_emissions {
  map<string, bytes> emissions = 1;
}

enum file_type {
  heartbeat = 0;
  speedtest = 1;
}

enum cell_type {
  nova436h = 0;
  nova4301 = 1;
  neutrino430 = 2;
  sercomm_indoor = 3;
  sercomm_outdoor = 4;
}
    
