syntax = "proto3";

package helium.poc_mobile;

message speedtest_req_v1 {
  bytes pub_key = 1;
  string serial = 2;
  // Timestamp of speedtest test in seconds from unix epoch
  uint64 timestamp = 3;
  uint64 upload_speed = 4;
  uint64 download_speed = 5;
  uint32 latency = 6;

  bytes signature = 7;
}

message speedtest_resp_v1 { string id = 1; }

message cell_heartbeat_req_v1 {
  // Public key of the hotspot
  bytes pub_key = 1;
  string hotspot_type = 2;
  uint32 cell_id = 3;
  // Timestamp of heartbeat in seconds from unix epoch
  uint64 timestamp = 4;
  double lat = 5;
  double lon = 6;
  bool operation_mode = 7;
  string cbsd_category = 8;
  string cbsd_id = 9;

  bytes signature = 10;
}

message cell_heartbeat_resp_v1 { string id = 1; }

service poc_mobile {
  rpc submit_speedtest(speedtest_req_v1) returns (speedtest_resp_v1);
  rpc submit_cell_heartbeat(cell_heartbeat_req_v1)
      returns (cell_heartbeat_resp_v1);
}

message file_info {
  string key = 1;
  file_type file_type = 2;
  uint64 timestamp = 3;
  uint64 size = 4;
}

message processed_files {
  repeated file_info files = 1; 
}

message share {
  bytes pub_key = 1;
  bytes weight = 2;
  uint64 timestamp = 3;
  cell_type cell_type = 4;
}

message shares {
  map<string, share> shares = 1;
}

message unrewardable_share {
  bytes pub_key = 1;
  bytes weight = 2;
  uint64 timestamp = 3;
  cell_type cell_type = 4;
  string invalid_reason = 5;
}

message unrewardable_shares {
  map<string, unrewardable_share> shares = 1; 
}

message speed_share {
  bytes pub_key = 1;
  uint64 upload_speed = 2;
  uint64 download_speed = 3;
  uint32 latency = 4;
  uint64 timestamp = 5;
}

message speed_share_list {
  repeated speed_share speed_shares = 1;
}

message speed_shares {
  map<string, speed_share_list> speed_shares = 1;
}

message moving_avg {
  uint64 window_size = 1;
  average average = 2;
  bool is_valid = 3; 
  repeated speed_share speed_shares = 4;
}

message average {
  uint64 upload_speed_avg = 1;
  uint64 download_speed_avg =  2;
  uint32 latency_avg = 3;
}

message speed_share_moving_avgs {
  map<string, moving_avg> moving_avgs = 1;
}

message cell_shares {
  map<string, bytes> shares = 1;
}

message hotspot_shares {
  map<string, bytes> shares = 1;
}

message owner_shares {
  map<string, bytes> shares = 1;
}

message missing_owner_shares {
  map<string, bytes> shares = 1;
}

message owner_emissions {
  map<string, bytes> emissions = 1;
}

enum file_type {
  heartbeat = 0;
  speedtest = 1;
}

enum cell_type {
  nova436h = 0;
  nova4301 = 1;
  neutrino430 = 2;
  sercomm_indoor = 3;
  sercomm_outdoor = 4;
}
