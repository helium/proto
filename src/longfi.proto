syntax = "proto3";

package helium.longfi;

enum LongFiSpreading {
    SF_INVALID = 0;
    SF7 = 1;
    SF8 = 2;
    SF9 = 3;
    SF10 = 4;
}

message LongFiReq {
    uint32 id = 1;
    oneof kind {
        LongFiTxUplinkPacket tx_uplink = 2;
    }
}

message LongFiResp {
    uint32 id = 1;
    oneof kind {
        LongFiTxStatus tx_status = 2;
        LongFiRxPacket rx = 3;
        bytes parse_err = 4;
    }
}

message LongFiTxStatus {
    bool success = 1;
}

message LongFiRxPacket {
    // Status of CRC check.
    bool crc_check = 1;
    // 1uS-resolution timestamp derived from concentrator's internal counter.
    uint64 timestamp = 2;
    // Average packet RSSI in dB.
    float rssi = 3;
    // Average packet SNR, in dB.
    float snr = 4;
    // OUI for routing
    uint32 oui = 5;
    // device ID
    uint32 device_id = 6;
    // MAC 
    uint32 mac = 7;
    LongFiSpreading spreading = 9;
    // the fully reassembled payload
    bytes payload = 10;
}

message LongFiTxUplinkPacket {
    bool disable_encoding = 1;
    bool disable_fragmentation = 2;
    uint32 oui = 3;
    uint32 device_id = 4;
    LongFiSpreading spreading = 5;
    bytes payload = 6;
}
